const {contextBridge, ipcRenderer} = require('electron/renderer')

contextBridge.exposeInMainWorld('electronIpcApi', {
    pickGitFolder: (args) => ipcRenderer.invoke('pick-git-folder', args),
    sampleError: (args) => ipcRenderer.invoke('sample-error', args),
    readDirectory: (args) => ipcRenderer.invoke('read-directory', args),
    writeFile: (args) => ipcRenderer.invoke('write-file', args),
    unlink: (args) => ipcRenderer.invoke('unlink', args),
    clone: (repositoryUrl, directory) => ipcRenderer.invoke('git-clone', repositoryUrl, directory),
    Errors: () => ipcRenderer.invoke('git-errors'),
    add: (args) => ipcRenderer.invoke('git-add', args),
    addAll: (args) => ipcRenderer.invoke('git-add-all', args),
    abortMerge: (args) => ipcRenderer.invoke('git-abort-merge', args),
    addNote: (args) => ipcRenderer.invoke('git-add-note', args),
    addRemote: (args) => ipcRenderer.invoke('git-add-remote', args),
    annotatedTag: (args) => ipcRenderer.invoke('git-annotated-tag', args),
    branch: (args) => ipcRenderer.invoke('git-branch', args),
    checkout: (args) => ipcRenderer.invoke('git-checkout', args),
    commit: (args) => ipcRenderer.invoke('git-commit', args),
    getConfig: (args) => ipcRenderer.invoke('git-get-config', args),
    getConfigAll: (args) => ipcRenderer.invoke('git-get-config-all', args),
    setConfig: (args) => ipcRenderer.invoke('git-set-config', args),
    currentBranch: (args) => ipcRenderer.invoke('git-current-branch', args),
    deleteBranch: (args) => ipcRenderer.invoke('git-delete-branch', args),
    deleteRef: (args) => ipcRenderer.invoke('git-delete-ref', args),
    deleteRemote: (args) => ipcRenderer.invoke('git-delete-remote', args),
    deleteTag: (args) => ipcRenderer.invoke('git-delete-tag', args),
    expandOid: (args) => ipcRenderer.invoke('git-expand-oid', args),
    expandRef: (args) => ipcRenderer.invoke('git-expand-ref', args),
    fastForward: (args) => ipcRenderer.invoke('git-fast-forward', args),
    fetch: (args) => ipcRenderer.invoke('git-fetch', args),
    findMergeBase: (args) => ipcRenderer.invoke('git-find-merge-base', args),
    findRoot: (args) => ipcRenderer.invoke('git-find-root', args),
    getRemoteInfo: (args) => ipcRenderer.invoke('git-get-remote-info', args),
    getRemoteInfo2: (args) => ipcRenderer.invoke('git-get-remote-info-2', args),
    hashBlob: (args) => ipcRenderer.invoke('git-hash-blob', args),
    indexPack: (args) => ipcRenderer.invoke('git-index-pack', args),
    init: (args) => ipcRenderer.invoke('git-init', args),
    isDescendent: (args) => ipcRenderer.invoke('git-is-descendent', args),
    isIgnored: (args) => ipcRenderer.invoke('git-is-ignored', args),
    listBranches: (args) => ipcRenderer.invoke('git-list-branches', args),
    listFiles: (args) => ipcRenderer.invoke('git-list-files', args),
    listNotes: (args) => ipcRenderer.invoke('git-list-notes', args),
    listRemotes: (args) => ipcRenderer.invoke('git-list-remotes', args),
    listServerRefs: (args) => ipcRenderer.invoke('git-list-server-refs', args),
    listTags: (args) => ipcRenderer.invoke('git-list-tags', args),
    log: (args) => ipcRenderer.invoke('git-log', args),
    merge: (args) => ipcRenderer.invoke('git-merge', args),
    packObjects: (args) => ipcRenderer.invoke('git-pack-objects', args),
    pull: (args) => ipcRenderer.invoke('git-pull', args),
    push: (args) => ipcRenderer.invoke('git-push', args),
    readBlob: (args) => ipcRenderer.invoke('git-read-blob', args),
    readCommit: (args) => ipcRenderer.invoke('git-read-commit', args),
    readNote: (args) => ipcRenderer.invoke('git-read-note', args),
    readObject: (args) => ipcRenderer.invoke('git-read-object', args),
    readTag: (args) => ipcRenderer.invoke('git-read-tag', args),
    readTree: (args) => ipcRenderer.invoke('git-read-tree', args),
    remove: (args) => ipcRenderer.invoke('git-remove', args),
    removeNote: (args) => ipcRenderer.invoke('git-remove-note', args),
    renameBranch: (args) => ipcRenderer.invoke('git-rename-branch', args),
    resetIndex: (args) => ipcRenderer.invoke('git-reset-index', args),
    updateIndex: (args) => ipcRenderer.invoke('git-update-index', args),
    resolveRef: (args) => ipcRenderer.invoke('git-resolve-ref', args),
    status: (args) => ipcRenderer.invoke('git-status', args),
    statusMatrix: (args) => ipcRenderer.invoke('git-status-matrix', args),
    tag: (args) => ipcRenderer.invoke('git-tag', args),
    version: (args) => ipcRenderer.invoke('git-version', args),
    walk: (args) => ipcRenderer.invoke('git-walk', args),
    writeBlob: (args) => ipcRenderer.invoke('git-write-blob', args),
    writeCommit: (args) => ipcRenderer.invoke('git-write-commit', args),
    writeObject: (args) => ipcRenderer.invoke('git-write-object', args),
    writeRef: (args) => ipcRenderer.invoke('git-write-ref', args),
    writeTag: (args) => ipcRenderer.invoke('git-write-tag', args),
    writeTree: (args) => ipcRenderer.invoke('git-write-tree', args),
});